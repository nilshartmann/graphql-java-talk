# Use this for embedded H2 ------------>
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.datasource.url=jdbc:h2:file:~/h2/beer-rating-spring
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.username=sa
# Use this for Postgres (see docker/postgres-compose.yaml):
#spring.datasource.url=jdbc:postgresql://localhost:8432/beerrating_db
#spring.datasource.username=karlheinz
#spring.datasource.password=becks
# Common JPA Properties (valid for both Postgres and H2)
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# Run server on port 9000
server.port=9000
logging.level.org.springframework.orm.jpa=INFO
logging.level.org.springframework.orm.jpa.JpaTransactionManager=INFO
logging.level.graphql.servlet=INFO
logging.level.graphql=INFO
# logging.level.org.springframework.graphql=TRACE
spring.output.ansi.enabled=always
jwt.secret=skAlprositbeerbierbierecervesa050403becksjEvEr
jwt.expirationInMs=7200000


beeradvisor.userservice.url=http://localhost:9020

#----------------------------------------------------------------
# spring-graphql config
#----------------------------------------------------------------
# Note that we DO NOT use the embedded GraphiQL UI from
# spring-graphql because we have to use our own version
# that supports authorization of GraphQL requests
# and that supports Subscriptions
spring.graphql.graphiql.enabled=false

# GraphQL endpoints for Web and WebSocket requests
# Note that this endpoints are accessible only with a
# valid JWT token.
# You can find a valid token after login with GraphiQL
# or in the server log file after starting the server
# (search for "Never Expiring JWT Token")
spring.graphql.path=/graphql
spring.graphql.websocket.path=/subscriptions

